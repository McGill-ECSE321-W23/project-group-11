class ParkingManagementSystem { 
  // TODO this class should be composed of all other 
  1 <@>- 0..1 Manager manager;
  1 <@>- * Employee employees;
  1 <@>- * Customer customers;
  1 <@>- 1..* User users;
  1 <@>- * Car cars;
  1 <@>- 250 RegTempSpot regSpots; 
  1 <@>- 20 LargeTempSpot largeSpots;
  1 <@>- * ServiceType serviceTypes;
  1 <@>- * SpecificService services;
  1 <@>- * SystemInfo systemInfo;
  1 <@>- 200 ReservedSpot monthlySpot;
}


class User {
  unique email;
  password;
  1 <- * UserRole roles;
}
class UserRole {
  abstract;
}
class Employee {
  schedule;
  isA UserRole;
}
class Manager {
  isA UserRole;
  1 <- 0..1 SystemInfo;
  1 <- * ServiceType;
}
class Customer {
  isA UserRole;
}


class Car
{
  unique licensePlate;
  enum Size{Regular, Large};
  Size size;
  0..1 <- 0..1 ReservedSpot resSpot;
  0..1 <- 0..1 RegTempSpot tempSpot;
  0..1 <- 0..1 LargeTempSpot tempSpot;
  1..* <- 0..1 SpecificService;
  * <- 0..1 User;
}


class ServiceType {
  unique name;
  cost;
  duration;
  1 serviceType <- * SpecificService;
}
class SpecificService {
  Date dateAndTime;
  employee;
  }


class ReservedSpot {
  unique Integer id; // spot number
  float monthlyCost;
}


class TempSpots {
  abstract;
  Date startTime; // assuming dates include time
  int duration; // number of 15 minute intervals
}
class LargeTempSpot {
  isA TempSpots;
  float pricePer15; // price per 15 minute interval
}
class RegTempSpot {
  isA TempSpots;
  float pricePer15; // price per 15 minute interval
}
class SystemInfo
{
  openTime;
  closeTime;
 
}